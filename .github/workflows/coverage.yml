name: Code Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin
      
    - name: Run cargo-tarpaulin
      run: cargo tarpaulin --verbose --workspace --timeout 120 --out Xml --packages appcui
      
    - name: Generate coverage summary
      id: coverage_summary
      shell: pwsh
      run: |
        # Extract coverage percentage from cobertura.xml using PowerShell
        $xml = [xml](Get-Content cobertura.xml)
        $lineRate = [double]$xml.coverage.GetAttribute("line-rate")
        $coveragePct = $lineRate * 100
        $coverageInt = [math]::Round($coveragePct)
        echo "coverage=$coverageInt" >> $env:GITHUB_OUTPUT
        
    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_CODECOVERAGE }}
        gistID: f7d7e7d56b2725a3b33a265e8a9d8e9c
        filename: appcui-rs-coverage.json
        label: coverage
        message: ${{ steps.coverage_summary.outputs.coverage }}%
        color: ${{ steps.coverage_summary.outputs.coverage >= 80 && 'green' || steps.coverage_summary.outputs.coverage >= 70 && 'yellow' || steps.coverage_summary.outputs.coverage >= 60 && 'orange' || 'red' }}
        
    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: cobertura.xml
        
    - name: Generate coverage report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: cobertura.xml
        badge: true
        format: markdown
        output: both
        
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md 